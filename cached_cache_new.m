function CACHE = cached_cache_new(MAX_ITEMS, M, CACHE_TYPE) %#codegen
% creates a new cache of a given size

nu = size(M.G, 2);
nx = size(M.E, 2);

value = struct('Dual', zeros(nu, nu+nx), ...
    'Primal', zeros(nu, nu+nx), ...
    'cardinality', 0);
% key = false(1, nc); % when the key are binary indices of active constraints
key = zeros(1, nu); % when the key is the vector of indices of active constraints
data = struct('key', key, 'value', value);

cardinalities = uint32(zeros(1, MAX_ITEMS));
ages = uint64(zeros(1, MAX_ITEMS));
hits = uint64(zeros(1, MAX_ITEMS));
hashes = uint32(zeros(1, MAX_ITEMS));
CACHE = struct('ages', ages, ...
    'hits', hits, ...
    'cardinalities', cardinalities, ...
    'hashes', hashes, ...
    'items', data(ones(1, MAX_ITEMS)), ...
    'n_items', uint32(0), ...
    'max_items', uint32(MAX_ITEMS), ...
    'time', uint64(0), ...
    'fifo_head', uint32(1), ...
    'cache_type', uint32(CACHE_TYPE));

% ages - time of insertion of a particular item
% hits - number of reads of a particular item
% cardinalities - number of active constraints of a particular item
% time - current "time" of the cache (incremented upon each insert)
% fifo_head - pointer to the index of the last inserted item

end
